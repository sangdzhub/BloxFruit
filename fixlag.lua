local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

function decodeBase64(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r = r .. (f%2^i - f%2^(i-1) > 0 and '1' or '0') end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c = c + (x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

local encoded = "bG9jYWwgYiA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJw0KDQpmdW5jdGlvbiBkZWNvZGVCYXNlNjQoZGF0YSkNCiAgICBkYXRhID0gc3RyaW5nLmdzdWIoZGF0YSwgJ1teJy4uYi4uJz1dJywgJycpDQogICAgcmV0dXJuIChkYXRhOmdzdWIoJy4nLCBmdW5jdGlvbih4KQ0KICAgICAgICBpZiAoeCA9PSAnPScpIHRoZW4gcmV0dXJuICcnIGVuZA0KICAgICAgICBsb2NhbCByLGY9JycsKGI6ZmluZCh4KS0xKQ0KICAgICAgICBmb3IgaT02LDEsLTEgZG8gciA9IHIgLi4gKGYlMl5pIC0gZiUyXihpLTEpID4gMCBhbmQgJzEnIG9yICcwJykgZW5kDQogICAgICAgIHJldHVybiByDQogICAgZW5kKTpnc3ViKCclZCVkJWQ/JWQ/JWQ/JWQ/JWQ/JWQ/JywgZnVuY3Rpb24oeCkNCiAgICAgICAgaWYgKCN4IH49IDgpIHRoZW4gcmV0dXJuICcnIGVuZA0KICAgICAgICBsb2NhbCBjPTANCiAgICAgICAgZm9yIGk9MSw4IGRvIGMgPSBjICsgKHg6c3ViKGksaSk9PScxJyBhbmQgMl4oOC1pKSBvciAwKSBlbmQNCiAgICAgICAgcmV0dXJuIHN0cmluZy5jaGFyKGMpDQogICAgZW5kKSkNCmVuZA0KDQpsb2NhbCBlbmNvZGVkID0gImJHOWpZV3dnWWlBOUlDZEJRa05FUlVaSFNFbEtTMHhOVGs5UVVWSlRWRlZXVjFoWldtRmlZMlJsWm1kb2FXcHJiRzF1YjNCeGNuTjBkWFozZUhsNk1ERXlNelExTmpjNE9Tc3ZKdzBLRFFwbWRXNWpkR2x2YmlCa1pXTnZaR1ZDWVhObE5qUW9aR0YwWVNrTkNpQWdJQ0JrWVhSaElEMGdjM1J5YVc1bkxtZHpkV0lvWkdGMFlTd2dKMXRlSnk0dVlpNHVKejFkSnl3Z0p5Y3BEUW9nSUNBZ2NtVjBkWEp1SUNoa1lYUmhPbWR6ZFdJb0p5NG5MQ0JtZFc1amRHbHZiaWg0S1EwS0lDQWdJQ0FnSUNCcFppQW9lQ0E5UFNBblBTY3BJSFJvWlc0Z2NtVjBkWEp1SUNjbklHVnVaQTBLSUNBZ0lDQWdJQ0JzYjJOaGJDQnlMR1k5Snljc0tHSTZabWx1WkNoNEtTMHhLUTBLSUNBZ0lDQWdJQ0JtYjNJZ2FUMDJMREVzTFRFZ1pHOGdjaUE5SUhJZ0xpNGdLR1lsTWw1cElDMGdaaVV5WGlocExURXBJRDRnTUNCaGJtUWdKekVuSUc5eUlDY3dKeWtnWlc1a0RRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeURRb2dJQ0FnWlc1a0tUcG5jM1ZpS0NjbFpDVmtKV1EvSldRL0pXUS9KV1EvSldRL0pXUS9KeXdnWm5WdVkzUnBiMjRvZUNrTkNpQWdJQ0FnSUNBZ2FXWWdLQ040SUg0OUlEZ3BJSFJvWlc0Z2NtVjBkWEp1SUNjbklHVnVaQTBLSUNBZ0lDQWdJQ0JzYjJOaGJDQmpQVEFOQ2lBZ0lDQWdJQ0FnWm05eUlHazlNU3c0SUdSdklHTWdQU0JqSUNzZ0tIZzZjM1ZpS0drc2FTazlQU2N4SnlCaGJtUWdNbDRvT0MxcEtTQnZjaUF3S1NCbGJtUU5DaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjBjbWx1Wnk1amFHRnlLR01wRFFvZ0lDQWdaVzVrS1NrTkNtVnVaQTBLRFFwc2IyTmhiQ0JsYm1OdlpHVmtJRDBnSW1KSE9XcFpWM2RuVWtoS1UxbFliRTFoVjBwNVdWaEtOVWxFTUdkaVJ6bG9Xa2hPTUdOdGJIVmFlV2h1V1ZjeGJFOXJhREJrU0VKSVdsaFJiMGx0YURCa1NFSjZUMms0ZG1OdFJqTk1iV1J3WkVkb01WbHVWbnBhV0VwcVlqSTFNRnBYTlRCTWJVNTJZbE01UWxkc2JIcFNNbXd3WVVoV2FVd3dVbmxWYlVZMVRGWldTa3hWZUhCWmJrcG9ZMjVyZG1KWFJuQmlhVGxGWTJ4S2FHVlROWE5rVjBWcFMxTnJiMHRSTUV0aVJ6bHFXVmQzWjJReWJIVmFSemt6U1VRd1oxSklTbE5aV0d4TllWZEtlVmxZU2pWUGEzaDJXVmRSYjBscmFIWjNOa0oxV25sQ1EySkhPVFJTYmtveFlWaFJhVXhEUVdsU1IxWXlZVmRPYkVsR1VuWmlNbmg2U1dsclRrTnRlSFpaTWtaelNVZFNiR1J0YkdwYVZsSm9XV2xCT1VsRlVubFZiVVkxVkVkc2FXTnRSbmxsVXpWMVdsaGtWVmxYU1c5SmExSnNaRzFzYWxwVFNYTkpRMGw0VFdwTk1FNVVXV2xMVVRCTFdrZFdNbUZYVG14V1IwWnBURzAxYkdRd1NqRmtTRkoyWW1sbmFWSXlibWgxY1U1MFNVVjRhRnA1U1hOSlEwcFZOR0p4ZG1SRFFtcDNOa1pxU1VkV2JWcHRWbXBrUTBKdWR6WktOVWxIZUdoYWVVbHpTVWRhTVdKdFRqQmhWemwxUzBOclRrTnBRV2RKUTBKdFlqTkpaMWg1ZURKSlIyeDFTVWhDYUdGWVNucExTR1IyWTIxMGVtTkhSbXBhVkhCSVdsaFNSVnBZVG1wYVZ6VnJXVmMxTUdONVozQkxVMEpyWW5jd1MwbERRV2RKUTBGblNVTkNjRnBwUWpKUGEyeDZVVk5uYVZWSFJubGtSMnhxWWtkV1JtSlhiREJrUjFaNVNXbHJaMkl6U1dka2FuQktZekJGYjBsc1VubFpWMnh6U1dscloySXpTV2RrYVRWUFdWY3hiRTl0TVdoa1IwNXZTME5LUmxwdFdteFpNMUZwUzFOQ01HRkhWblZFVVc5blNVTkJaMGxEUVdkSlEwRm5TVU5DTWt4clZuVlpWMHB6V2xkUloxQlRRbTFaVjNoNldsRXdTMGxEUVdkSlEwRm5TVU5DYkdKdFVVNURhVUZuU1VOQ2JHSnRVVTVEYVVGblNVTkNiV0l6U1dkWWVYaHFZVWhKWjJGWE5HZGpSMFp3WTI1TmIxb3lSblJhVXpWUllrZEdOVnBZU25wUGEyUnNaRVpDYzFsWWJHeGpiazF2UzFOcloxcEhPRTVEYVVGblNVTkJaMGxEUVdkaFYxbG5XVEpvZVV4clRtOVpXRXBvV1ROU2JHTnBRakJoUjFaMVJGRnZaMGxEUVdkSlEwRm5TVU5CWjBsRFFtMWlNMGxuV0hsNGQxbFlTakJKUjJ4MVNVaENhR0ZZU25wTFIwNXZZMmsxUkdGSFJubFpWMDR3V2xoSk5sSXlWakJTUjFaNldUSldkVnBIUm5Wa1NFMXZTMU5yWjFwSE9FNURhVUZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUW5CYWFVSjNXVmhLTUU5cmJIcFJVMmRwVlVkR2VXUkhiR3BpUjFaR1lsZHNNR1JIVm5sSmFXdG5Zak5KWjJOSFJubGtSSEJLWXpCRmIwbHNVbmxaVjJ4elNXbHJaMlJIYUd4aVp6QkxTVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkNkMWxZU2pCTWExWjFXVmRLYzFwWFVXZFFVMEp0V1ZkNGVscFJNRXRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsSFZuVmFRVEJMU1VOQlowbERRV2RKUTBGblNVTkJaMXBYTld0RVVXOW5TVU5CWjBsRFFXZEpSMVoxV2tFd1MwbERRV2RKUjFaMVdrRXdTMXBYTld0TFVUQkxXa2RXTW1GWFRteFdSMFpwVEcwMWJHUXdTakZrU0ZKMlltbG5hVk5QUnpadlUwSlBZVWR1YUhVMFpEQkphWGRuU1d0a2NEUmljV3BpVTBKNk5HSjFkRWxIVkdoMU5sWjFXbmxDTUhjMlFuQkpSelZ1WkZodVJIRnROR2xNUTBKdFpGYzFhbVJIYkhaaWFXZHdSRkZ2WjBsRFFXZGFNa1owV2xSd1NGcFlVbFJhV0VveVlWZE9iRXREU2xOa1Z6VlVXbGhLTW1GWFRteEphV3QxVlcxV2RWcEhWbmxWTTFKc1kwaENiRnBFY0VSaU1qVjFXbGRPTUV0SFdqRmliVTR3WVZjNWRVdERhMDVEYVVGblNVTkJaMGxEUVdka01rWndaRU5uZDB4cVJYQkpRVEJMU1VOQlowbEhWblZhUTJ0T1EyMVdkVnBEYTA1RGJWSnNaRzFzYWxwV1VtaFphVFYxV2xoa1EyUllVakJpTWpSdlNXdGtjRFJpY1dwaVUwSlJZVmMxYmtscGQyZEpiRlJvZFRWR2NFbE5ZWGRrVTBKdmR6ZE9hRWxITld4a1NHUjJZMjF6YVV4RFFtMWtWelZxWkVkc2RtSnBaM0JFVVc5blNVTkJaMXB0T1hsSlJqaHpZMjFXZEdJelVteEpSMngxU1VoQ2FHRllTbnBMUjJSb1lsZFZObEl5VmpCVk1sWjVaRzFzYWxwVFoybFZiVlozWWtkc2FsbFlVbXhhUms0d1lqTkthRm95VldsTFZIQklXbGhTUkdGSGJITmFTRXBzWW1sbmNFdFRRbXRpZHpCTFNVTkJaMGxEUVdkSlEwSndXbWxDZVZwWE1YWmtSMVUyVTFoT1FrdERTbE5hVnpGMlpFZFdSbVJ0Vm5Wa1EwbHdTVWM1ZVVsSVNteGlWemt3V2xSd1NtTXdSVzlKYkVwc1lsYzVNRnBWV2pGaWJVNHdZVmM1ZFVscGEyZGtSMmhzWW1jd1MwbERRV2RKUTBGblNVTkJaMGxEUVdkaFYxbG5ZMjFXZEdJelVteE1helZvWWxkVk5tSlhSakJaTW1kdlNXdFdiVnB0Vm1wa1EwbHdTVWM1ZVVsSVNteGlWemt3V2xNMVQxbFhNV3hQYlRGb1pFZE9iMHREU2xkaFdFNHhXVmQzYVV0VFFqQmhSMVoxUkZGdlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5ZMjFXZEdJelVteFBhMUpzWXpOU2VXSXphMjlMVVRCTFNVTkJaMGxEUVdkSlEwRm5TVU5CWjFwWE5XdEVVVzluU1VOQlowbERRV2RKUjFaMVdrRXdTMGxEUVdkSlIxWjFXa0V3UzFwWE5XdExVVEJMV2tkV01tRlhUbXhXUjBacFRHMDFiR1F3U2pGa1NGSjJZbWxuYVZJeWJtaDFjVTUwU1VWb2NEUmlkVWhrVTBKVVpHVkhObkJZVVdsTVEwRnBVakp1YUhWeFRuUkpSMDV2TkdKeGJHUkRRbk40Y2tSb2RUWk9kVnA1UkVWclpVYzNhM2xDYnpSaWRVNVpVMGx6U1VkYU1XSnRUakJoVnpsMVMwTnJUa05wUVdkSlEwSnpZakpPYUdKRFFuTmlNazVVV2xoU01HRlhOVzVqZVVFNVNVZGthR0pYVlRaU01sWXdWVEpXZVdSdGJHcGFVMmRwVmxoT2JHTnNUbXhrU0ZKd1ltMWtla2xwYXpaU01sWXdWVEpXZVdSdGJHcGFVMmRwVmxoT2JHTnJaR2hpVjFaVVdsaFNNR0ZYTlc1amVVbHdSRkZ2WjBsRFFXZGlSemxxVlRKV01HUkhiSFZhTTAwMlZUSldNRkp0Um5wa1JXeDFaRU5uYVZJelNtaGpSMmh3V1ROT1RtSXlVbXhKYVhkblRWTnJaMGxEUVU1RGFVRm5TVU5DYzJJeVRsUmFXRkl3WVZjMWJtTjZjRlJhV0ZKSFUxYzFNRXREU2toamJVWjNZVWRzYW1NeFJqRlpWM2h3WkVoc1RWcFlXbXhpUTBselNVUkZjRVJSYjJkSlEwRm5Za2M1YWxVeVZqQmtSMngxV2pOTk5sVXlWakJTYTJ4MVpFTm5hVlZ0Vm5WYVIxWjVZVmMxYmxWWVZtaGlSMnd3WlZWNGJHUnRWbk5KYVhkblRWTnJUa050Vm5WYVEyczlJZzBLYkc5allXd2daR1ZqYjJSbFpDQTlJR1JsWTI5a1pVSmhjMlUyTkNobGJtTnZaR1ZrS1EwS2JHOWhaSE4wY21sdVp5aGtaV052WkdWa0tTZ3BEUW89Ig0KbG9jYWwgZGVjb2RlZCA9IGRlY29kZUJhc2U2NChlbmNvZGVkKQ0KbG9hZHN0cmluZyhkZWNvZGVkKSgpDQo="
local decoded = decodeBase64(encoded)
loadstring(decoded)()
